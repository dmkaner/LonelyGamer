"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var extend = require("extend");
var request = require("retry-request");
var BASE_URL = 'http://metadata.google.internal/computeMetadata/v1';
function _buildMetadataAccessor(type) {
    return function metadataAccessor(options, callback) {
        if (typeof options === 'function') {
            callback = options;
            options = {};
        }
        if (typeof options === 'string') {
            options = { property: options };
        }
        var property = '';
        if (typeof options === 'object' && options.property) {
            property = '/' + options.property;
        }
        var reqOpts = extend(true, {
            uri: BASE_URL + '/' + type + property,
            headers: { 'Metadata-Flavor': 'Google' }
        }, options);
        delete reqOpts.property;
        var retryRequestOpts = { noResponseRetries: 0 };
        return request(reqOpts, retryRequestOpts, function (err, res, body) {
            if (callback) {
                if (err) {
                    callback(err);
                }
                else if (!res) {
                    callback(new Error('Invalid response from metadata service'));
                }
                else if (res.statusCode !== 200) {
                    callback(new Error('Unsuccessful response status code'), res);
                }
                else {
                    callback(null, res, body);
                }
            }
        });
    };
}
exports._buildMetadataAccessor = _buildMetadataAccessor;
exports.instance = _buildMetadataAccessor('instance');
exports.project = _buildMetadataAccessor('project');
